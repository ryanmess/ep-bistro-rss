import html

# Regenerate RSS items with proper escaping for XML
rss_items_escaped = ""
for event in events:
    pub_date = datetime.strptime(event["date"], "%Y-%m-%d").strftime("%a, %d %b %Y 18:00:00 GMT")
    desc_lines = []
    if event["breakfast"]:
        desc_lines.append(f"🥞 Breakfast: {html.escape(event['breakfast'])}")
    if event["lunch"]:
        desc_lines.append(f"🍔 Lunch: {html.escape(event['lunch'])}")
    desc_lines.append(f"🍽️ Dinner: {html.escape(event['dinner'])} (5:45 PM – 7:00 PM)")
    if event["notes"]:
        desc_lines.append(f"📝 {html.escape(event['notes'])}")
    description = "\n".join(desc_lines)
    title = f"{datetime.strptime(event['date'], '%Y-%m-%d').strftime('%B %d')} ({event['day']}): {html.escape(event['dinner'])}"
    rss_items_escaped += f"""
    <item>
      <title>{title}</title>
      <description>{description}</description>
      <pubDate>{pub_date}</pubDate>
    </item>
    """

rss_feed_escaped = f"""<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
  <channel>
    <title>EP Bistro - Dinner Menu &amp; Meal Times</title>
    <description>Upcoming dinner menus and meal times at EP Bistro for April 2025.</description>
    <link>http://example.com/ep-bistro</link>
    <lastBuildDate>{datetime.utcnow().strftime('%a, %d %b %Y %H:%M:%S GMT')}</lastBuildDate>
    {rss_items_escaped}
  </channel>
</rss>
"""

# Save corrected RSS to file
fixed_path = Path("/mnt/data/ep-bistro-fixed.xml")
fixed_path.write_text(rss_feed_escaped)

fixed_path.name
